"use client";
import Header from "@/components/Header";
import AntdProvider from "@/lib/AntdProvider";
import { store } from "@/rtk/store";
import {
  ApolloClient,
  ApolloProvider,
  HttpLink,
  InMemoryCache,
  NormalizedCacheObject,
} from "@apollo/client";
import { ConfigProvider } from "antd";
import { Inter } from "next/font/google";
import { usePathname, useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import { Provider } from "react-redux";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const createApolloClient = (authToken: string) => {
  return new ApolloClient({
    link: new HttpLink({
      uri: process.env.NEXT_PUBLIC_HASURA_API_URL,
      ...(authToken && {
        headers: {
          Authorization: `Bearer ${authToken}`,
        },
      }),
    }),
    cache: new InMemoryCache(),
  });
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const router = useRouter();
  const pathname = usePathname();

  const publicRoutes = ["/register", "/login", "/home"];
  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>(
    createApolloClient("")
  );
  useEffect(() => {
    if (
      !localStorage.getItem("refreshToken") &&
      !publicRoutes.includes(pathname)
    ) {
      router.replace("/login");
    }
    const accessToken = localStorage.getItem("accessToken");
    if (accessToken) {
      setClient(createApolloClient(accessToken));
    }
  }, [pathname, publicRoutes, router]);

  return (
    <ApolloProvider client={client}>
      <Provider store={store}>
        <AntdProvider>
          <ConfigProvider
            theme={{
              token: {
                colorPrimary: "#FEDB39",
              },
            }}
          >
            <html lang="en">
              <body className={inter.className}>
                <Header />
                <div className="flex justify-center w-full">
                  <div className="max-w-[1200px] w-full">{children}</div>
                </div>
              </body>
            </html>
          </ConfigProvider>
        </AntdProvider>
      </Provider>
    </ApolloProvider>
  );
}
